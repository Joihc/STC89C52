C51 COMPILER V9.57.0.0   MENU2                                                             05/31/2018 15:56:48 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MENU2
OBJECT MODULE PLACED IN .\Objects\menu2.obj
COMPILER INVOKED BY: D:\pro\keil5\core\C51\BIN\C51.EXE source\menu2.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\menu2.lst) TABS(2) OBJECT(.\Objects\menu2.obj)

line level    source

   1          #define MENU2_C_
   2          #include "menu2.h"
   3          
   4          
   5          #define MENU2_INDEX 14
   6          #define MENU2_NUM 12
   7          uint8  code set_str[MENU2_INDEX][MENU2_NUM] = {
   8            {"  输入密码  "},
   9            {"  最大功率  "},
  10            {"最大供电电压"},
  11            {"最小供电电压"},
  12            {"最大线盘电流"},
  13            {"最大线盘温度"},
  14            {"通用线盘温度"},
  15            {"最大锅内温度"},   
  16            {"最大漏料温度"}, 
  17            {"最大IGBT频率"},
  18            {"最小IGBT频率"},
  19            {"最大IGBT温度"},
  20            {"限制工作时间"},
  21            {"  修改密码  "},
  22          };
  23          
  24          static int16 set_value[MENU2_INDEX]={
  25            9000,
  26            888,
  27            777,
  28            6666,
  29            5555,
  30            444,
  31            3,
  32            2222,
  33            1111,
  34            000,
  35            11,
  36            11,
  37            0,
  38            0,
  39          };
  40          
  41          int8 menu2_now_page = 0;
  42          int8 menu2_old_page = -1;
  43          bit menu2_display =0;
  44          
  45          bit menu2_set =0;//在设置状态
  46          uint8 menu2_set_num = 0;//默认设置0位  左到右 0 1 2 3 4
  47          
  48          static int16 menu2_value =0;
  49          static uint8 menu2_str[16]={""};
  50          
  51          //显示菜单2界面
  52          void Discrable_Menu2_String(uint8 per)
  53          {
  54   1        uint8 mark;
C51 COMPILER V9.57.0.0   MENU2                                                             05/31/2018 15:56:48 PAGE 2   

  55   1        int16 value = set_value[per];
  56   1        for(mark=0;mark<16;mark++)
  57   1        {
  58   2          menu2_str[mark]=' ';
  59   2        }
  60   1        for(mark=2;mark<14;mark++)
  61   1        {
  62   2          menu2_str[mark]=set_str[per][mark-2];
  63   2        }
  64   1        Display_String(1,menu2_str);//菜单头
  65   1        
  66   1        for(mark=0;mark<16;mark++)
  67   1        {
  68   2          menu2_str[mark]=' ';
  69   2        }
  70   1        if(value <0)
  71   1        {
  72   2          value = 0;
  73   2        }
  74   1        //mark = (value<0?1:0);
  75   1        value = abs(value);
  76   1        
  77   1      //  menu2_str[0]='<';
  78   1      //  menu2_str[1]='<';
  79   1      //  menu2_str[2]='<';
  80   1      //  menu2_str[3]='<';
  81   1      //  menu2_str[4]='<';
  82   1        menu2_str[5] = value%100000/10000+0x30; 
  83   1        menu2_str[6] = value%10000/1000+0x30;
  84   1        menu2_str[7] = value%1000/100+0x30;
  85   1        menu2_str[8] = value%100/10+0x30;
  86   1        menu2_str[9]  ='.'; 
  87   1        menu2_str[10] =value%10+0x30;
  88   1      //  menu2_str[11]='>';
  89   1      //  menu2_str[12]='>';
  90   1      //  menu2_str[13]='>';
  91   1      //  menu2_str[14]='>';
  92   1      //  menu2_str[15]='>';
  93   1        Display_String(3,menu2_str);//菜单值
  94   1      }
  95          void Set_Mark()
  96          {
  97   1        uint8 mark;
  98   1        for(mark=0;mark<16;mark++)
  99   1          {
 100   2            menu2_str[mark]=' ';
 101   2          }
 102   1          if(menu2_set)
 103   1          {
 104   2            switch(menu2_set_num)
 105   2            {
 106   3              case 0:
 107   3                menu2_str[10]=0x18;
 108   3                break;
 109   3              case 1:
 110   3                menu2_str[8]=0x18;
 111   3                break;
 112   3              case 2:
 113   3                menu2_str[7]=0x18;
 114   3                break;
 115   3              case 3:
 116   3                menu2_str[6]=0x18;
C51 COMPILER V9.57.0.0   MENU2                                                             05/31/2018 15:56:48 PAGE 3   

 117   3                break;
 118   3              case 4:
 119   3                menu2_str[5]=0x18;
 120   3                break;
 121   3            }
 122   2          }
 123   1          Display_String(2,menu2_str);//菜单值
 124   1          for(mark=0;mark<16;mark++)
 125   1          {
 126   2            menu2_str[mark]=' ';
 127   2          }
 128   1          if(menu2_set)
 129   1          {
 130   2            switch(menu2_set_num)
 131   2            {
 132   3              case 0:
 133   3                menu2_str[10]=0x19;
 134   3                break;
 135   3              case 1:
 136   3                menu2_str[8]=0x19;
 137   3                break;
 138   3              case 2:
 139   3                menu2_str[7]=0x19;
 140   3                break;
 141   3              case 3:
 142   3                menu2_str[6]=0x19;
 143   3                break;
 144   3              case 4:
 145   3                menu2_str[5]=0x19;
 146   3                break;
 147   3            }
 148   2          }
 149   1          Display_String(4,menu2_str);//菜单值
 150   1      }
 151          
 152          //返回多少页 0 1 2 3
 153          void Display_Menu2_Screen()
 154          {
 155   1        while(1)
 156   1        {
 157   2          if(Down_Key_Down())
 158   2          {
 159   3            if(menu2_old_page < MENU2_INDEX-1 && !menu2_set)
 160   3            {
 161   4              menu2_now_page++;
 162   4            }
 163   3            else if(menu2_set)
 164   3            {
 165   4              if(set_value[menu2_old_page]-My_Pow(10,menu2_set_num)<0)
 166   4              {
 167   5                menu2_value =0;
 168   5              }
 169   4              else
 170   4              {
 171   5                menu2_value = set_value[menu2_old_page]-My_Pow(10,menu2_set_num);
 172   5              }
 173   4              //Set_Menu2_Value(menu2_old_page,menu2_value);
 174   4              //Send_To_Client_Packet(40+menu2_old_page,menu2_value);
 175   4              
 176   4            }   
 177   3          }
 178   2          else if(Up_Key_Down())
C51 COMPILER V9.57.0.0   MENU2                                                             05/31/2018 15:56:48 PAGE 4   

 179   2          {
 180   3            if(menu2_old_page >0 && !menu2_set)
 181   3            {
 182   4              menu2_now_page--;
 183   4            }
 184   3            else if(menu2_set)
 185   3            {
 186   4              if(set_value[menu2_old_page] + My_Pow(10,menu2_set_num) > 32767)
 187   4              {
 188   5                menu2_value = 32767;
 189   5              }
 190   4              else
 191   4              {
 192   5                menu2_value = set_value[menu2_old_page] + My_Pow(10,menu2_set_num);
 193   5              }     
 194   4            }
 195   3          }
 196   2          else if(Return_Key_Down())
 197   2          {
 198   3            break;
 199   3          }   
 200   2          else if(Ok_Key_Down())
 201   2          {
 202   3            //send_PC('A');
 203   3            menu2_set= ~menu2_set;
 204   3            menu2_set_num =4;//切换一次就把设置位归零
 205   3            if(!menu2_set)
 206   3            {
 207   4              //保存
 208   4              Send_To_Client_Packet(40+menu2_old_page,menu2_value);
 209   4            }
 210   3          }
 211   2          else if(Left_Key_Down() && menu2_set && menu2_set_num <4)
 212   2          {
 213   3            menu2_set_num++;
 214   3          }
 215   2          else if(Right_Key_Down() && menu2_set && menu2_set_num >0)
 216   2          {
 217   3            menu2_set_num--;
 218   3          }
 219   2          Set_Mark();
 220   2          if(menu2_now_page == menu2_old_page && menu2_display==1)
 221   2          {
 222   3            continue;
 223   3          }
 224   2          menu2_display = 1;
 225   2          
 226   2          menu2_old_page = menu2_now_page;
 227   2          
 228   2          Wr_Command(0x01,1); //显示清屏
 229   2      
 230   2          Discrable_Menu2_String(menu2_old_page); 
 231   2        }
 232   1        menu2_display = 0;
 233   1        menu2_set=0;//退出更改模式到显示模式
 234   1      }
 235          
 236          void Set_Menu2_Value(int8 index,int16 value)
 237          {
 238   1        index-=40;
 239   1        if(set_value[index] != value)
 240   1        {
C51 COMPILER V9.57.0.0   MENU2                                                             05/31/2018 15:56:48 PAGE 5   

 241   2          set_value[index] = value;
 242   2          if(index == menu2_old_page && menu2_display)
 243   2          {
 244   3            for(index=0;index<16;index++)
 245   3            {
 246   4              menu2_str[index]=' ';
 247   4            }
 248   3            if(value <0)
 249   3            {
 250   4              value = 0;
 251   4            }
 252   3            value = abs(value);
 253   3        
 254   3            menu2_str[5] = value%100000/10000+0x30; 
 255   3            menu2_str[6] = value%10000/1000+0x30;
 256   3            menu2_str[7] = value%1000/100+0x30;
 257   3            menu2_str[8] = value%100/10+0x30;
 258   3            menu2_str[9]  ='.'; 
 259   3            menu2_str[10] =value%10+0x30;
 260   3            Display_String(3,menu2_str);//菜单值
 261   3          }
 262   2        }
 263   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1005    ----
   CONSTANT SIZE    =    168    ----
   XDATA SIZE       =     49       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
