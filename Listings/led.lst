C51 COMPILER V9.57.0.0   LED                                                               05/31/2018 15:56:47 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: D:\pro\keil5\core\C51\BIN\C51.EXE source\led.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #define LED_C_
   2          #include "led.h"
   3          
   4          void Led_On()
   5          {
   6   1        LED =1;
   7   1      }
   8          void Led_Off()
   9          {
  10   1        LED=0;
  11   1      }
  12          void Led_Change()
  13          {
  14   1        LED=~LED;
  15   1      }
  16          void Beep_Change()
  17          {
  18   1        uint8 i=1000;
  19   1        while(i--)
  20   1        {
  21   2          BEEP=~BEEP;
  22   2          delayus(100); 
  23   2        }
  24   1      }
  25          
  26          int16 my_atoi (const char *str)
  27          {
  28   1          int value = 0;
  29   1          int flag = 1; //判断符号
  30   1      
  31   1          while (*str == ' '||*str == '0')  //跳过字符串前面的空格
  32   1          {
  33   2              str++;
  34   2          }
  35   1      
  36   1          if (*str == '-')  //第一个字符若是‘-’，说明可能是负数
  37   1          {
  38   2              flag = 0;
  39   2              str++;
  40   2          }
  41   1          else if (*str == '+') //第一个字符若是‘+’，说明可能是正数
  42   1          {
  43   2              flag = 1;
  44   2              str++;
  45   2          }//第一个字符若不是‘+’‘-’也不是数字字符，直接返回0
  46   1          
  47   1          while (*str == ' '||*str == '0')  //跳过字符串前面的空格
  48   1          {
  49   2              str++;
  50   2          }
  51   1          
  52   1          if (*str > '9' || *str < '0') 
  53   1          {
  54   2              return 0;    
C51 COMPILER V9.57.0.0   LED                                                               05/31/2018 15:56:47 PAGE 2   

  55   2          }
  56   1      
  57   1          //当遇到非数字字符或遇到‘/0’时，结束转化
  58   1          while (*str != '#' && *str != '\0' && *str <= '9' && *str >= '0')
  59   1          {
  60   2              value = value * 10 + *str - 0x30; //将数字字符转为对应的整形数
  61   2              str++;
  62   2          }
  63   1      
  64   1          if (flag == 0) //负数的情况
  65   1          {
  66   2              value = -value;
  67   2          }
  68   1      
  69   1          return value;
  70   1      }
  71          int32 My_Pow(int base, int exponent) 
  72          {
  73   1          int32 ans = 1, last_pow = base;
  74   1          while (exponent > 0) {
  75   2              // 如果最低位为1
  76   2              if ((exponent & 1) != 0)
  77   2                  ans = ans * last_pow ;
  78   2              exponent = exponent >> 1;
  79   2              last_pow = last_pow * last_pow;
  80   2          }
  81   1          return ans;
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
