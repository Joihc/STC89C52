C51 COMPILER V9.57.0.0   MENU1                                                             06/22/2018 16:51:28 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MENU1
OBJECT MODULE PLACED IN .\Objects\menu1.obj
COMPILER INVOKED BY: D:\pro\keil5\core\C51\BIN\C51.EXE source\menu1.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\menu1.lst) TABS(2) OBJECT(.\Objects\menu1.obj)

line level    source

   1          #define MENU1_C_
   2          #include "menu1.h"
   3          
   4          #define MENU1_INDEX 12
   5          #define MENU1_NUM 9
   6          uint8  code display_str[MENU1_INDEX][MENU1_NUM] = {
   7            {"当前功率:"},
   8            {"供电电压:"},
   9            {"供电电流:"},
  10            {"线盘电流:"},
  11            {"最大电流:"},
  12            {"线盘温度:"},
  13            {"锅内温度:"},                   
  14            {"IGBT频率:"},
  15            {"IGBT温度:"},
  16            {"使用容量:"},
  17            {"机器状态:"},
  18            {"通信故障:"},
  19          };
  20          //最大-9999~+ 32767
  21          static int16 display_value[MENU1_INDEX]={
  22            0,
  23            0,
  24            0,
  25            0,
  26            0,
  27            0,
  28            0,
  29            0,
  30            0,
  31            0,
  32            0,
  33            0,
  34          };
  35          int8 menu1_now_page = 0;
  36          int8 menu1_old_page = -1;
  37          bit menu1_display =0;
  38          
  39          static uint8 menu1_str[16]={""};
  40          static uint32 heart_beat_men1 =0;
  41          
  42          bit menu1_value_update =0;
  43          
  44          //显示菜单1界面
  45          void Discrable_Menu1_String(uint8 *string,int16 value,uint8 per)
  46          {
  47   1        uint8 mark;
  48   1        for(mark=0;mark<9;mark++)
  49   1        {
  50   2          menu1_str[mark]=string[mark];
  51   2        }
  52   1        if(value <-9999)
  53   1        {
  54   2          value = -9999;
C51 COMPILER V9.57.0.0   MENU1                                                             06/22/2018 16:51:28 PAGE 2   

  55   2        }
  56   1        mark = (value<0?1:0);
  57   1        value = abs(value);
  58   1        
  59   1        
  60   1        menu1_str[9] = value%100000/10000+0x30;
  61   1        if(menu1_str[9]=='0')
  62   1        {
  63   2          menu1_str[9] = ' ';
  64   2          if(mark && (value>999))
  65   2          {
  66   3            menu1_str[9] = '-';
  67   3            mark =0;    
  68   3          }
  69   2        }
  70   1        
  71   1        menu1_str[10] = value%10000/1000+0x30;
  72   1        if(menu1_str[10]=='0' && menu1_str[9]==' ')
  73   1        {
  74   2          menu1_str[10] = ' ';
  75   2          if(mark && (value>99))
  76   2          {
  77   3            menu1_str[10] = '-';
  78   3            mark =0;
  79   3          }
  80   2        }
  81   1        menu1_str[11] = value%1000/100+0x30;
  82   1        if(menu1_str[11]=='0'&& menu1_str[10]==' ' && menu1_str[10]==' ')
  83   1        {
  84   2          menu1_str[11] = ' ';
  85   2          if(mark)
  86   2          {
  87   3            menu1_str[11] = '-';
  88   3            mark =0;      
  89   3          }
  90   2        }
  91   1        menu1_str[12] = value%100/10+0x30;
  92   1        menu1_str[13] ='.'; 
  93   1        menu1_str[14] =value%10+0x30;
  94   1        switch(per)
  95   1        {
  96   2          case 0:
  97   2            menu1_str[15] = 'K';
  98   2            break;
  99   2          case 1:
 100   2            menu1_str[15] = 'V';
 101   2            break;
 102   2          case 2:
 103   2            menu1_str[15] = 'A';
 104   2            break;
 105   2          case 3:
 106   2            menu1_str[15] = 'A';
 107   2            break;
 108   2          case 4:
 109   2            menu1_str[15] = 'A';
 110   2            break;
 111   2          case 5:
 112   2            menu1_str[15] = 'C';
 113   2            break;
 114   2          case 6:
 115   2            menu1_str[15] = 'C';
 116   2            break;
C51 COMPILER V9.57.0.0   MENU1                                                             06/22/2018 16:51:28 PAGE 3   

 117   2          case 7:
 118   2            menu1_str[15] = 'K';
 119   2            break;
 120   2          case 8:
 121   2            menu1_str[15] = 'C';
 122   2            break;
 123   2          case 9:
 124   2            menu1_str[15] = '%';
 125   2            break;
 126   2          default:
 127   2            menu1_str[15] = ' ';
 128   2            break;
 129   2        }
 130   1      }
 131            
 132          //返回多少页 0 1 2 3
 133          void Display_Menu1_Screen()
 134          {
 135   1        while(1)
 136   1        {
 137   2          if(menu1_old_page < (MENU1_INDEX-1)/4 && Down_Key_Down())
 138   2          {
 139   3            menu1_now_page++;
 140   3          }
 141   2          else if(menu1_old_page >0 && Up_Key_Down())
 142   2          {
 143   3            menu1_now_page--;
 144   3          }
 145   2          else  if(Return_Key_Down())
 146   2          { 
 147   3            break;
 148   3          }
 149   2          
 150   2          Usart_Update();
 151   2          
 152   2          if(menu1_now_page == menu1_old_page &&  menu1_display == 1)
 153   2          {
 154   3            if(menu1_value_update)
 155   3            {
 156   4              menu1_value_update = 0;
 157   4              Update_Menu1_Value();
 158   4            }
 159   3            continue;
 160   3          }
 161   2          menu1_display=1;
 162   2          menu1_old_page = menu1_now_page;
 163   2          
 164   2          Wr_Command(0x01,1); //显示清屏
 165   2          if(menu1_old_page*4<MENU1_INDEX)
 166   2          {
 167   3            Discrable_Menu1_String(display_str[menu1_old_page*4],display_value[menu1_old_page*4],menu1_old_page*4);
 168   3            Display_String(1,menu1_str);
 169   3          }
 170   2          if(menu1_old_page*4+1<MENU1_INDEX)
 171   2          {
 172   3            Discrable_Menu1_String(display_str[menu1_old_page*4+1],display_value[menu1_old_page*4+1],menu1_old_page
             -*4+1);
 173   3            Display_String(2,menu1_str);
 174   3          }
 175   2          if(menu1_old_page*4+2<MENU1_INDEX)
 176   2          {
 177   3            Discrable_Menu1_String(display_str[menu1_old_page*4+2],display_value[menu1_old_page*4+2],menu1_old_page
C51 COMPILER V9.57.0.0   MENU1                                                             06/22/2018 16:51:28 PAGE 4   

             -*4+2);
 178   3            Display_String(3,menu1_str);
 179   3          }
 180   2          if(menu1_old_page*4+3<MENU1_INDEX)
 181   2          {
 182   3            Discrable_Menu1_String(display_str[menu1_old_page*4+3],display_value[menu1_old_page*4+3],menu1_old_page
             -*4+3);
 183   3            Display_String(4,menu1_str);
 184   3          }
 185   2        }
 186   1        menu1_display = 0;
 187   1      }
 188          void Update_Menu1_Value()
 189          {
 190   1        uint8 mark;
 191   1        uint8 i=0;
 192   1        int16 value;
 193   1        for(i=menu1_old_page*4;i<MENU1_INDEX && i<(menu1_old_page*4+4);i++)
 194   1        {
 195   2            mark = (display_value[i]<0?1:0);
 196   2            switch(i%4)
 197   2            {
 198   3              case 0:
 199   3                Wr_Command(0x84,1);
 200   3                break;
 201   3              case 1:
 202   3                Wr_Command(0x94,1);
 203   3                break;
 204   3              case 2:
 205   3                Wr_Command(0x8c,1);
 206   3                break;
 207   3              case 3:
 208   3                Wr_Command(0x9c,1);
 209   3                break;
 210   3            }
 211   2            menu1_str[8]=':';
 212   2            
 213   2            value = abs(display_value[i]);
 214   2        
 215   2        
 216   2            menu1_str[9] = value%100000/10000+0x30;
 217   2            if(menu1_str[9]=='0')
 218   2            {
 219   3              menu1_str[9] = ' ';
 220   3              if(mark && (value>999))
 221   3              {
 222   4                menu1_str[9] = '-';
 223   4                mark =0;    
 224   4              }
 225   3            }
 226   2        
 227   2            menu1_str[10] = value%10000/1000+0x30;
 228   2            if(menu1_str[10]=='0'&& menu1_str[9]==' ')
 229   2            {
 230   3              menu1_str[10] = ' ';
 231   3              if(mark && (value>99))
 232   3              {
 233   4                menu1_str[10] = '-';
 234   4                mark =0;
 235   4              }
 236   3            }
 237   2            menu1_str[11] = value%1000/100+0x30;
C51 COMPILER V9.57.0.0   MENU1                                                             06/22/2018 16:51:28 PAGE 5   

 238   2            if(menu1_str[11]=='0'&& menu1_str[10]==' '&& menu1_str[9]==' ')
 239   2            {
 240   3              menu1_str[11] = ' ';
 241   3              if(mark)
 242   3              {
 243   4                menu1_str[11] = '-';
 244   4                mark =0;      
 245   4              }
 246   3            }
 247   2            menu1_str[12]   = value%100/10+0x30;
 248   2            menu1_str[13] ='.'; 
 249   2            menu1_str[14] =value%10+0x30;
 250   2            for(mark=8;mark<15;mark++)
 251   2            {
 252   3              Wr_Data(menu1_str[mark]);
 253   3            }
 254   2        }
 255   1      }
 256          
 257          void Set_Menu1_Value(int8 index,int16 value)
 258          {
 259   1        if(value <-9999)
 260   1        {
 261   2          value = -9999;
 262   2        }
 263   1        if(display_value[index] != value)
 264   1        {
 265   2          display_value[index] = value;
 266   2          if(index/4 == menu1_old_page && menu1_display)
 267   2          {
 268   3            menu1_value_update = 1;
 269   3          }
 270   2        }
 271   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1400    ----
   CONSTANT SIZE    =    108    ----
   XDATA SIZE       =     46      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
