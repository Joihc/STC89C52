C51 COMPILER V9.57.0.0   LCD12864                                                          06/22/2018 16:51:27 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\pro\keil5\core\C51\BIN\C51.EXE source\lcd12864.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\lcd12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #define LCD12864_C_
   2          #include "lcd12864.h"
   3          
   4          unsigned char code zhu[]= { /* 0X00,0X01,0X80,0X00,0X40,0X00, */
   5          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
   6          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
   7          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
   8          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
   9          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  10          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  11          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  12          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  13          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  14          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  15          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  16          0XC0,0X10,0X1F,0XFF,0XC0,0X7F,0XFF,0XE3,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XF3,
  17          0XC0,0X10,0X1F,0XFF,0X80,0X7F,0XFF,0XE3,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XF3,
  18          0XC0,0X10,0X0F,0XFF,0X80,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XF3,
  19          0XC0,0X18,0X0F,0XFF,0X00,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XF3,
  20          0XC0,0X18,0X07,0XFF,0X01,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XF3,
  21          0XC0,0X1C,0X07,0XFF,0X01,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XF3,
  22          0XC0,0X1C,0X07,0XFE,0X01,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XF3,
  23          0XC0,0X1E,0X03,0XFE,0X03,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XC3,0XE0,0X00,0X03,0XE3,
  24          0XC0,0X1E,0X03,0XFC,0X03,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X03,0XEF,0XFF,0X03,0XE3,
  25          0XC0,0X1E,0X01,0XFC,0X07,0XE0,0X00,0X00,0X00,0X00,0X00,0X03,0XEF,0XFF,0X03,0XE3,
  26          0XC0,0X1F,0X01,0XF8,0X07,0XC0,0X00,0X00,0X00,0X00,0X00,0X03,0XEF,0XFF,0X03,0XE3,
  27          0XC0,0X1F,0X01,0XF8,0X0F,0X80,0X00,0X00,0X00,0X00,0X00,0X03,0XEF,0XFF,0X03,0XE3,
  28          0XC0,0X1F,0X80,0XF0,0X0F,0X80,0X00,0X00,0X00,0X00,0X00,0X03,0XEF,0XFF,0X07,0XE3,
  29          0XC0,0X1F,0X80,0XF0,0X1F,0X80,0X00,0X00,0X00,0X00,0X00,0X03,0XEF,0XFF,0XFF,0XF3,
  30          0XC0,0X1F,0XC0,0X70,0X1F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0XFF,0XF3,
  31          0XC0,0X1F,0XC0,0X60,0X1F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XE0,0X00,0XFF,0XF3,
  32          0XC0,0X1F,0XC0,0X20,0X3F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XE0,0X00,0XFF,0XF3,
  33          0XC0,0X1F,0XE0,0X00,0X3F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XE7,0XFC,0XFF,0XF3,
  34          0XC0,0X1F,0XE0,0X00,0X7F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XE7,0XFE,0XFF,0XF3,
  35          0XC0,0X1F,0XF0,0X00,0X7F,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XEF,0XFE,0XFF,0XF3,
  36          0XC0,0X1F,0XF0,0X00,0XFF,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XEF,0XFE,0X0F,0XE3,
  37          0XC0,0X1F,0XF8,0X00,0XFF,0X80,0X00,0X07,0XFF,0XFF,0XFF,0XE3,0XEF,0XFE,0X07,0XE3,
  38          0XC0,0X1F,0XF8,0X01,0XFF,0X80,0X00,0X00,0X07,0XF0,0X00,0X03,0XEF,0XFE,0X07,0XE3,
  39          0XC0,0X1F,0XF8,0X01,0XFF,0X80,0X00,0X00,0X0F,0XE0,0X00,0X03,0XEF,0XBE,0X07,0XE3,
  40          0XC0,0X1F,0XFC,0X03,0XFF,0X80,0X00,0X00,0X0F,0XE0,0X00,0X03,0XEF,0XBE,0X07,0XE3,
  41          0XC0,0X1F,0XFC,0X03,0XFF,0X80,0X00,0X00,0X0F,0XE0,0XE0,0X03,0XEF,0XBE,0X77,0XE3,
  42          0XC0,0X1F,0XFE,0X03,0XFF,0X80,0X00,0X00,0X1F,0XC3,0XF8,0X03,0XEF,0XBE,0X7F,0XE3,
  43          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X1F,0XC7,0XFC,0X03,0XEF,0XFE,0XFF,0XE3,
  44          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X3F,0X87,0XFC,0X03,0XEF,0XFF,0XFF,0XE3,
  45          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X3F,0X8F,0XFF,0X03,0XEF,0XFF,0XFF,0XE3,
  46          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X7F,0X0F,0XFF,0X83,0XEF,0XFF,0XFF,0XE3,
  47          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X7F,0X0F,0XFF,0XC3,0XEF,0XFE,0XFF,0XE3,
  48          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0X7F,0X1F,0XFF,0XC3,0XEF,0XFE,0XFF,0XE3,
  49          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0XFE,0X18,0X7F,0XE3,0XE0,0X00,0X77,0XE3,
  50          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X00,0XFE,0X10,0X3F,0XE3,0XEF,0X9E,0X07,0XE3,
  51          0XC0,0X1F,0XFE,0X07,0XFF,0X80,0X00,0X01,0XFC,0X10,0X3F,0XE3,0XEF,0XBE,0X07,0XE3,
  52          0XC0,0X1F,0XFE,0X07,0XFF,0XC0,0X00,0X01,0XFC,0X00,0X0F,0XE3,0XEF,0XBE,0X07,0XE3,
  53          0XC0,0X1F,0XFE,0X07,0XFF,0XC0,0X00,0X01,0XFC,0X00,0X0F,0XE3,0XEF,0XBE,0X07,0XE3,
  54          0XC0,0X1F,0XFE,0X07,0XFF,0XE0,0X00,0X03,0XF8,0X00,0X0F,0XE3,0XE7,0XFE,0X07,0XE3,
C51 COMPILER V9.57.0.0   LCD12864                                                          06/22/2018 16:51:27 PAGE 2   

  55          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XF8,0X00,0X0F,0XE3,0XE7,0XFC,0X07,0XE3,
  56          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XF8,0X00,0X0F,0XE3,0XEF,0XFF,0X07,0XE3,
  57          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0X1F,0XE3,
  58          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0X1F,0XE3,
  59          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0X1F,0XE3,
  60          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0X1F,0XE3,
  61          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XE3,0XEF,0XFF,0X1F,0XE3,
  62          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XC3,0XCF,0XFF,0X1F,0XC3,
  63          0XC0,0X1F,0XFE,0X07,0XFF,0XFF,0XFF,0XE0,0XFF,0XFF,0XFF,0X83,0XCF,0XFF,0X1F,0X83,
  64          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  65          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  66          0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
  67          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
  68          0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
  69          };
  70          uint8 code string_1[16]    = {"云厨热能有限公司"};
  71          uint8 code string_2[16]    = {"电话:15680850437"};
  72          
  73          
  74          
  75          #define m 11
  76          #define n 9
  77          
  78          
  79          
  80          
  81          uint8 main_page = 0;//当前在那个页面
  82          
  83          const uint8 menu_step;
  84          
  85          void Display_Start()
  86          {
  87   1        uint8 i;
  88   1        Display_Pic();
  89   1        for(i=0;i<10;i++)
  90   1        delayms(4000);
  91   1        
  92   1        Wr_Command(0x01,1); //显示清屏
  93   1        
  94   1        Display_String(2,string_1);
  95   1        Display_String(3,string_2);
  96   1        for(i=0;i<10;i++)
  97   1        delayms(4000);
  98   1      }
  99          
 100          
 101          
 102          void Display_String(uint8 line,uint8 *string)//显示字符串
 103          {
 104   1        uint8 addr,i;
 105   1        Wr_Command(0x30,1);        //回到基本指令集
 106   1        if(line==1)
 107   1        addr=0x80;
 108   1        else if(line==2)
 109   1        addr=0x90;
 110   1        else if(line==3)
 111   1        addr=0x88;
 112   1        else if(line==4)
 113   1        addr=0x98;
 114   1        Wr_Command(addr,1);
 115   1        for(i=0;i<16;i++)
 116   1        {
C51 COMPILER V9.57.0.0   LCD12864                                                          06/22/2018 16:51:27 PAGE 3   

 117   2          Wr_Data(*string++);
 118   2        }
 119   1      }
 120          void Display_Pic()
 121          {
 122   1          uint8 i,j,k;
 123   1          uint8 *ptr = zhu;
 124   1          
 125   1          Wr_Command(0x34,1); //打开扩展指令集
 126   1          i = 0x80;            
 127   1          for(j = 0;j < 32;j++)
 128   1          {
 129   2              Wr_Command(i++,1);
 130   2              Wr_Command(0x80,1);
 131   2              for(k = 0;k < 16;k++)
 132   2              {
 133   3                Wr_Data(*ptr++);
 134   3              }
 135   2          }
 136   1          i = 0x80;
 137   1          for(j = 0;j < 32;j++)
 138   1          {
 139   2              Wr_Command(i++,1);
 140   2              Wr_Command(0x88,1);   
 141   2              for(k = 0;k < 16;k++)
 142   2              {
 143   3                Wr_Data(*ptr++);
 144   3              } 
 145   2          }  
 146   1          Wr_Command(0x36,1);        //打开绘图显示
 147   1          Wr_Command(0x30,1);        //回到基本指令集
 148   1      }
 149          void Wr_Data(uint8 wrdata) //写数据
 150          {
 151   1        RDbf();
 152   1        RS=1;
 153   1        RW=0;
 154   1        E=1;
 155   1        //LCMdata=wrdata;
 156   1        Set_LCMdata(wrdata);
 157   1        E=0;
 158   1      }
 159          
 160          void Wr_Command(uint8 wrcommand,uint8 busyc) //写指令
 161          {
 162   1        if(busyc)
 163   1        RDbf();
 164   1        RS=0;
 165   1        RW=0;
 166   1        E=1;
 167   1        //LCMdata=wrcommand;
 168   1        Set_LCMdata(wrcommand);
 169   1        E=0;
 170   1      }
 171          
 172          void RDbf(void) //读忙状态
 173          {
 174   1        while(1)
 175   1        {
 176   2          RS=0;
 177   2          RW=1;
 178   2          E=0;
C51 COMPILER V9.57.0.0   LCD12864                                                          06/22/2018 16:51:27 PAGE 4   

 179   2          LCMdata=0xFF;
 180   2          E=1;
 181   2          if((LCMdata&Busy)==0)
 182   2          break;
 183   2        }
 184   1      }
 185          
 186          void Lcm_Init(void)
 187          {
 188   1        PSB =1;
 189   1        REST=1;
 190   1        REST=0;
 191   1        delayms(20);
 192   1        REST=1;
 193   1        Wr_Command(0x30,0);
 194   1        delayms(5);
 195   1        Wr_Command(0x30,0); //2次显示模式设置，不用判忙
 196   1        delayms(5);
 197   1        Wr_Command(0x0C,1); //开显示及光标设置
 198   1        delayms(5);
 199   1        Wr_Command(0x01,1); //显示清屏
 200   1        delayms(5);
 201   1        delayms(5);
 202   1        Wr_Command(0x06,1); //显示光标移动设置
 203   1        delayms(5);
 204   1      }
 205          
 206          void Set_LCMdata(uint8 wrdata)
 207          {
 208   1        Test_Bit(wrdata,0)?Set_Bit(LCMdata,7):Clr_Bit(LCMdata,7);
 209   1        Test_Bit(wrdata,1)?Set_Bit(LCMdata,6):Clr_Bit(LCMdata,6);
 210   1        Test_Bit(wrdata,2)?Set_Bit(LCMdata,5):Clr_Bit(LCMdata,5);
 211   1        Test_Bit(wrdata,3)?Set_Bit(LCMdata,4):Clr_Bit(LCMdata,4);
 212   1        Test_Bit(wrdata,4)?Set_Bit(LCMdata,3):Clr_Bit(LCMdata,3);
 213   1        Test_Bit(wrdata,5)?Set_Bit(LCMdata,2):Clr_Bit(LCMdata,2);
 214   1        Test_Bit(wrdata,6)?Set_Bit(LCMdata,1):Clr_Bit(LCMdata,1);
 215   1        Test_Bit(wrdata,7)?Set_Bit(LCMdata,0):Clr_Bit(LCMdata,0);
 216   1      }
 217          
 218          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    579    ----
   CONSTANT SIZE    =   1056    ----
   XDATA SIZE       =      2      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
